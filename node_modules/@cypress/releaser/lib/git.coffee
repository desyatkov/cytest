_       = require("lodash")
cp      = require("child_process")
git     = require("simple-git")
chalk   = require("chalk")
Promise = require("bluebird")

cp   = Promise.promisifyAll(cp)
repo = Promise.promisifyAll(git(process.cwd()))

module.exports = {
  commit: (filePath, message) ->
    repo.addAsync(filePath)
    .then ->
      repo.commitAsync(message, filePath)

  verifyCleanWorkingDir: (checkIfClean) ->
    ## bail if we're not required to be clean
    return Promise.resolve() if not checkIfClean

    new Promise (resolve, reject) ->
      cp.execAsync("git status --porcelain")
      .then(_.trim)
      .then (str) ->
        if str.length
          console.log(chalk.red("Sorry you have files in git which have not been commited:"))
          console.log("")
          _(str.split("\n")).compact().each (line) ->
            console.log(chalk.cyan("- #{line}"))
          console.log("")
          console.log("You must commit these files first before releasing.")
          console.log("")
          console.log(chalk.gray("If you'd like to override this, pass the: " + chalk.white("--no-clean") + " flag."))
          console.log("")

          process.exit(0)
        else
          resolve()

  verifyBranch: (branch) ->
    cp.execAsync("git rev-parse --abbrev-ref HEAD")
    .then(_.trim)
    .then (str) ->
      return if str is branch

      console.log(chalk.red("Sorry you are currently in branch: " + chalk.cyan(str)))
      console.log("")
      console.log("You must be on " + chalk.green(branch) + " to release.")
      console.log("")
      console.log(chalk.gray("If you'd like to override this, pass the: " + chalk.white("--branch=#{str}") + " flag."))
      console.log("")

      process.exit(0)
}