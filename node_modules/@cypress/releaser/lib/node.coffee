fs        = require("fs-extra")
path      = require("path")
chalk     = require("chalk")
Promise   = require("bluebird")
cwd       = require("./utils/cwd")
git       = require("./git")
questions = require("./questions")

fs           = Promise.promisifyAll(fs)
VERSION_PATH = cwd(".node-version")

module.exports = {
  create: (version) ->
    fs.writeFileAsync(VERSION_PATH, version)

  commit: ->
    git.commit(VERSION_PATH, "created #{path.basename(VERSION_PATH)}")

  ensureVersion: (checkNode) ->
    ## bail if we're not requiring checking for node version
    return Promise.resolve() if not checkNode

    fs
    .statAsync(VERSION_PATH)
    .catch =>
      questions.askToCreateNodeVersion(VERSION_PATH)
      .then (bool) =>
        if bool
          questions.askWhichNodeVersion(VERSION_PATH)
          .bind(@)
          .then(@create)
          .then(@commit)
        else
          console.log("")
          console.log(chalk.red("Cannot continue without creating a .node-version file."))
          console.log("")
          process.exit(0)
}